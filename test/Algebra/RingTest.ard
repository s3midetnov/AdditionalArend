\import Algebra.Field
\import Algebra.Group
\import Algebra.Meta
\import Algebra.Monoid
\import Algebra.Pointed
\import Algebra.Ring
\import Algebra.Semiring
\import Arith.Int
\import Arith.Nat
\import Arith.Rat
\import Order.Lattice

\lemma semiringTest1 {R : Semiring} (a b c d : R) : a + b * (c + d) = b * c + a + b * d
  => equation

\lemma semiringTest2 {R : Semiring} (a b c d e : R) : a * ((b + c) * d + e) = a * e + (a * (b + c)) * d
  => equation

\lemma natCoefTest {R : Semiring} (a b c d : R) : a + b * (3 * c + d + 2 + 2) + a = 2 * a + 3 * b * c + 4 * b + b * d
  => equation

\lemma zeroTest {R : Semiring} (a : R) : a * natCoef 0 = 0
  => equation

\lemma ringTest {R : Ring} (a b c d : R) : a * ((b + c) * d) - (a * b) * d = a * (c * d)
  => equation

\lemma intCoefTest {R : Ring} (b c d : R) : b * 2 * c + b * (3 * c + d + 4) + b * -3 = 5 * b * c + b * (d + 1)
  => equation

\lemma zeroTest2 {R : Ring} (a b c d : R) : a + a * -1 = 0
  => equation

\lemma commSemiringTest {R : CSemiring} (a b c d e : R) : d * ((b + c) * a + e) = e * d + d * (a * (c + b))
  => equation

\lemma commRingTest {R : CRing} (a b c d e : R) : a * b - b * (a + c) + c * b * a = b * c * (a - 1)
  => equation

\lemma latticeTest1 {L : Bounded.DistributiveLattice} (a b c : L) : a ∧ (b ∨ (c ∧ a) ∨ (b ∧ a ∧ b)) = (b ∨ c) ∧ a
  => equation

\lemma latticeTest2 {L : Bounded.DistributiveLattice} (a b c d : L) : (c ∧ d ∧ c) ∨ b ∨ ((b ∧ b ∨ c) ∧ a) = b ∨ (c ∧ (a ∨ d))
  => equation

\lemma commRingAxTest1 {R : CRing} (q : zro {R} = ide) : natCoef {R} 2 = zro
  => equation

\lemma commRingAxTest2 {R : CRing} (a b : R) (p : a = b) : a * a + b * b = a * b + a * b
  => equation

\lemma commRingAxTest3 {R : CRing} (a b : R) (p : a = b) (q : a + b = ide) : a * a + b * b = a
  => equation

\lemma commRingTelescopicTest {R : CRing} (x0 x1 x2 x3 y : R) (p : x0 * y = 1)
                              (q1 : x1 = x0 * x0) (q2 : x2 = x1 * x1) (q3 : x3 = x2 * x2) (r : x3 = 0) : zro {R} = 1
  => equation

\lemma natTest (x y z : Nat) : suc x * (y + z) = z * x + y * suc x + z
  => equation

\lemma intTest1 {n m : Nat} : pos (n + m) = pos (m + n)
  => equation

\lemma intTest2 {n m : Nat} : pos n + (m Nat.- n) = pos m
  => equation