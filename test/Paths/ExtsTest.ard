\import Paths
\import Paths.Meta

\func sigmaPiExtTest {A : \Type} (B : A -> \Type) (p q : \Sigma (x : A) (A -> B x)) (t : p.1 = q.1) (s : \Pi (x : A) -> transport B t (p.2 x) = q.2 x) : p = q
  => exts (t,s)

\func sigmaPiExtTest2 {A : \Type} (B1 B2 : A -> \Type) (p q : \Sigma (x : A) (B1 x -> B2 x)) (t : p.1 = q.1) (s : \Pi (y : B1 p.1) -> transport B2 t (p.2 y) = q.2 (transport B1 t y)) : p = q
  => exts (t,s)

\func sigmaPiExtTest3 {A : \Type} (B : A -> \Type) (p q : \Sigma (x : A) (B x -> Nat)) (t : p.1 = q.1) (s : \Pi (y : B p.1) -> p.2 y = q.2 (transport B t y)) : p = q
  => exts (t,s)

\func sigmaPiExtTest4 {A : \Type} (B1 B2 B3 B4 : A -> \Type) (p q : \Sigma (x : A) ((B1 x -> B2 x) -> B3 x -> B4 x)) (t : p.1 = q.1)
                      (s : \Pi (f : B1 q.1 -> B2 p.1) (y : B3 p.1) -> transport B4 t (p.2 (\lam x => f (transport B1 t x)) y) = q.2 (\lam x => transport B2 t (f x)) (transport B3 t y)) : p = q
  => exts (t,s)

\func sigmaPiExtTest5 {A : \Type} (B1 : A -> A -> \Type) (B2 : \Type) (B3 : A -> \Type) (p q : \Sigma (x y : A) (B1 x y -> B2 -> B3 y)) (t1 : p.1 = q.1) (t2 : p.2 = q.2)
                      (s : \Pi (x : B1 p.1 p.2) (y : B2) -> transport B3 t2 (p.3 x y) = q.3 (coe (\lam i => B1 (t1 @ i) (t2 @ i)) x right) y) : p = q
  => exts (t1,t2,s)

\func sigmaPiExtTest6 {A : \Type} (B1 : A -> \Type) (B2 : \Type) (B3 : A -> \Type) (p q : \Sigma (x y : A) (B1 y -> B2 -> B3 y)) (t1 : p.1 = q.1) (t2 : p.2 = q.2)
                      (s : \Pi (x : B1 p.2) (y : B2) -> transport B3 t2 (p.3 x y) = q.3 (transport B1 t2 x) y) : p = q
  => exts (t1,t2,s)

\func sigmaDepPiExtTest {A : \Type} (B1 : A -> \Type) (B2 : \Pi (a : A) -> B1 a -> \Type) (p q : \Sigma (x : A) (\Pi (b : B1 x) -> B2 x b)) (t : p.1 = q.1) (s : transport (\lam x => \Pi (b : B1 x) -> B2 x b) t p.2 = q.2) : p = q
  => exts (t,s)

\func sigmaDepPiExtTest2 {A : \Type} (B1 : A -> \Type) (B2 : \Pi (a : A) -> B1 a -> \Type) (p q : \Sigma (x : A) (\Pi (b : B1 x) -> B2 x b -> Nat)) (t : p.1 = q.1) (s : transport (\lam x => \Pi (b : B1 x) -> B2 x b -> Nat) t p.2 = q.2) : p = q
  => exts (t,s)

\func sigmaDepPiExtTest3 {A : \Type} (B1 : A -> \Type) (B2 : \Pi (a : A) -> B1 a -> \Type) (p q : \Sigma (x : A) (\Pi {b : B1 x} -> B2 x b)) (t : p.1 = q.1) (s : transport (\lam x => \Pi {b : B1 x} -> B2 x b) t p.2 = {\Pi {b : B1 q.1} -> B2 q.1 b} q.2) : p = q
  => exts (t,s)

\func sigmaNonDepPiExtTest {A B : \Type} (p q : \Sigma A (A -> B)) (t : p.1 = q.1) (s : \Pi (x : A) -> p.2 x = q.2 x) : p = q
  => exts (t,s)

\func sigmaNonDepPiExtTest2 {A B : \Type} (C : \Prop) (p q : \Sigma (A -> B) C) (s : \Pi (x : A) -> p.1 x = q.1 x) : p = q
  => exts s

\func sigmaNonDepPiExtTest3 {A B : \Type} (C : (A -> B) -> \Type) (p q : \Sigma (f : A -> B) (C f)) (t : \Pi (a : A) -> p.1 a = q.1 a) (s : transport C (ext t) p.2 = q.2) : p = q
  => exts (t,s)

\func sigmaPathExtTest {A B : \Type} (f g : A -> B) (t s : \Sigma (x : A) (f x = g x)) (p : t.1 = s.1) (h : t.2 *> pmap g p = pmap f p *> s.2) : t = s
  => exts (p,h)

\func sigmaPathExtTest2 {A1 A2 B : \Type} (f g : A1 -> A2 -> B) (t s : \Sigma (x1 : A1) (x2 : A2) (f x1 x2 = g x1 x2)) (p1 : t.1 = s.1) (p2 : t.2 = s.2)
                        (h : t.3 *> path (\lam i => g (p1 @ i) (p2 @ i)) = path (\lam i => f (p1 @ i) (p2 @ i)) *> s.3) : t = s
  => exts (p1,p2,h)

\func sigmaNonDepPathExtTest {A B : \Type} {b1 b2 : B} (t s : \Sigma A (b1 = b2)) (p : t.1 = s.1) (h : t.2 = s.2) : t = s
  => exts (p,h)

\func sigmaSigmaExtTest {A : \Type} (B C : A -> \Type) (t s : \Sigma (x : A) (\Sigma (B x) (C x))) (p : t.1 = s.1) (h1 : transport B p t.2.1 = s.2.1) (h2 : transport C p t.2.2 = s.2.2) : t = s
  => exts (p,(h1,h2))

\func sigmaSigmaExtTest2 {A1 A2 : \Type} (B C : A1 -> A2 -> \Type) (t s : \Sigma (x1 : A1) (x2 : A2) (\Sigma (B x1 x2) (C x1 x2))) (p1 : t.1 = s.1) (p2 : t.2 = s.2)
                         (h1 : coe (\lam i => B (p1 @ i) (p2 @ i)) t.3.1 right = s.3.1) (h2 : coe (\lam i => C (p1 @ i) (p2 @ i)) t.3.2 right = s.3.2) : t = s
  => exts (p1,p2,(h1,h2))

\func sigmaNonDepSigmaExtTest {A B C : \Type} (t s : \Sigma A (\Sigma B C)) (p1 : t.1 = s.1) (p2 : t.2.1 = s.2.1) (p3 : t.2.2 = s.2.2) : t = s
  => exts (p1,(p2,p3))

\func recordPiExtTest {A : \Type} (B1 B2 : A -> \Type) (p q : R A B1 B2) (t : p.a = q.a) (s : \Pi (y : B1 p.a) -> transport B2 t (p.f y) = q.f (transport B1 t y)) : p = q
  => exts (t,s)
  \where {
    \record R (A : \Type) (B1 B2 : A -> \Type) (a : A) (f : B1 a -> B2 a)
  }

\func recordSuperFunExtTest {A : \Type} (B1 B2 : A -> \Type) (p q : S A B1 B2) (t : p = {R A B1 B2} q) (s : \Pi (y : B1 p.a) -> coe (\lam i => B2 (R.a {t @ i})) (p.f y) right = q.f (coe (\lam i => B1 (R.a {t @ i})) y right)) : p = q
  => exts S {
    | R => t
    | f => s
  }
  \where {
    \record R (A : \Type) (B1 B2 : A -> \Type) (a : A)
    \record S \extends R
      | f : B1 a -> B2 a
  }

\func arrayTest {A : \Type} {n : Nat} (l l' : Array A n) (q : \Pi (j : Fin n) -> l j = l' j) : l = {Array A} l'
  => exts q
