\import HLevel
\import Logic

\lemma assumption (A : \Type) (a : A) (p : isProp A) : A => a

\lemma contradiction (e : Empty) : Nat => 0

\lemma cases : D (\Sigma) => con2 ()
  \where
    \data D (A : \Type) | con1 Empty | con2 A

\lemma cases_contradiction : D (\Sigma) => con1 ()
  \where
    \data D (P : \Prop) | con1 P | con2 (Not P)
