\import Algebra.Pointed
\import Algebra.Ring
\import Algebra.Semiring
\import Logic

\func testNat => 2

\func testNat2 : Nat => 2

\func testInt => -2

\func testInt2 : Int => 2

\func testZeroLocal {X : AddPointed} : X => 0

\func testZeroLocal2 {X : Ring} : X => 0

\func testOneLocal {X : Pointed Empty} : Empty => 1

\func testOneGlobal : \Sigma => 1
  \where
    \instance instance : Pointed (\Sigma) ()

\func testSemiringLocal {X : Semiring} : X => 2

\func testRingLocal {X : Ring} : X => -2
